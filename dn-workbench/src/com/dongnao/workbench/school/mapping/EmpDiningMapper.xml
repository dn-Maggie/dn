<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dongnao.workbench.school.dao.EmpDiningMapper">
	<resultMap id="BaseResultMap" type="com.dongnao.workbench.school.model.EmpDining">
		<id column="id" property="id" jdbcType="VARCHAR" />
				<result column="emp_id" property="empId" jdbcType="VARCHAR" />
				<result column="enter_id" property="enterId" jdbcType="VARCHAR" />
				<result column="order_time" property="orderTime" jdbcType="TIMESTAMP" />
				<result column="order_type" property="orderType" jdbcType="VARCHAR" />
				<result column="dining_time" property="diningTime" jdbcType="TIMESTAMP" />
				<result column="note" property="note" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
						 	id
										,emp_id
										,enter_id
										,order_time
										,order_type
										,dining_time
										,note
						</sql>
	
	<select id="getByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from emp_dining
		where id = #{id,jdbcType=VARCHAR}
	</select>
	
	<select id="listByCondition" resultMap="BaseResultMap" parameterType="com.dongnao.workbench.school.model.EmpDining">
		select
				ed.id
				,ed.emp_id
				,ed.order_time
				,ed.order_type
				,ed.dining_time
				,ed.note
				,e.emp_no as empNo
				,e.nick_name as empNickName
				,bo.org_name as empDept
		from emp_dining ed 
		LEFT JOIN employee e on e.id = ed.emp_id
		LEFT join basic_org bo on e.dept_no = bo.org_no
		where 1=1
		<if test="id != null and '' != id">  
			and ed.id = #{id,jdbcType=VARCHAR}
		</if>
		<if test="empId != null and '' != empId">  
			and ed.emp_id = #{empId,jdbcType=VARCHAR}
		</if>
		<if test="orderTime != null and '' != orderTime">  
			and ed.order_time = #{orderTime,jdbcType=TIMESTAMP}
		</if>
		<if test="orderType != null and '' != orderType">  
			and ed.order_type = #{orderType,jdbcType=VARCHAR}
		</if>
		<if test="diningTime != null and '' != diningTime">  
			and ed.dining_time = #{diningTime,jdbcType=TIMESTAMP}
		</if>
		<if test="empNickName != null and '' != empNickName">  
			and e.nick_name = #{empNickName,jdbcType=TIMESTAMP}
		</if>
		<if test="empDept != null and '' != empDept">  
			and bo.org_name = #{empDept,jdbcType=TIMESTAMP}
		</if>
		<if test="null != propsMap.startDate and propsMap.startDate != ''">
			<![CDATA[
			and DATE_FORMAT(ed.dining_time,'%Y-%c-%d') >= DATE_FORMAT(#{propsMap.startDate,jdbcType=TIMESTAMP},'%Y-%c-%d')
			]]>
		</if>
		<if test="null != propsMap.endDate and propsMap.endDate != ''">
			<![CDATA[
				and DATE_FORMAT(ed.dining_time,'%Y-%c-%d') <= DATE_FORMAT(#{propsMap.endDate,jdbcType=TIMESTAMP},'%Y-%c-%d')
			]]>
		</if>
		<if test="orderFields != null and '' != orderFields">  
           	order by ${orderFields} ${order}
       	</if>
	</select>
	
	<select id="staticEmpDining" resultMap="BaseResultMap" parameterType="com.dongnao.workbench.school.model.EmpDining">
		SELECT 
			t1.id as empId, t1.emp_no as empNo
		FROM 
			employee t1 
		WHERE 
			t1.curr_state not in (3,4)
		AND 
			(id,emp_no) not in
			(select
				ed.emp_id
				,e.emp_no as empNo
			from emp_dining ed 
			LEFT JOIN employee e on e.id = ed.emp_id
			where 1=1
			<if test="orderType != null and '' != orderType">  
				and ed.order_type = #{orderType,jdbcType=VARCHAR}
			</if>
			<if test="diningTime != null and '' != diningTime">  
				and ed.dining_time = #{diningTime,jdbcType=TIMESTAMP}
			</if>
			<if test="empDept != null and '' != empDept">  
				and e.dept = #{empDept,jdbcType=TIMESTAMP}
			</if>
			<if test="null != propsMap.startDate and propsMap.startDate != ''">
				<![CDATA[
				and DATE_FORMAT(ed.dining_time,'%Y-%c-%d') >= DATE_FORMAT(#{propsMap.startDate,jdbcType=TIMESTAMP},'%Y-%c-%d')
				]]>
			</if>
			<if test="null != propsMap.endDate and propsMap.endDate != ''">
				<![CDATA[
					and DATE_FORMAT(ed.dining_time,'%Y-%c-%d') <= DATE_FORMAT(#{propsMap.endDate,jdbcType=TIMESTAMP},'%Y-%c-%d')
				]]>
			</if>
			)	
			ORDER BY emp_no ASC
	</select>
	
	<delete id="deleteByKey" parameterType="java.lang.String">
		delete from emp_dining
		where id = #{id,jdbcType=VARCHAR}
	</delete>
	
	<insert id="add" parameterType="com.dongnao.workbench.school.model.EmpDining">
		insert into emp_dining (
		<include refid="Base_Column_List" />
		)values (
				#{id,jdbcType=VARCHAR}
				,#{empId,jdbcType=VARCHAR}
				,#{enterId,jdbcType=VARCHAR}
				,#{orderTime,jdbcType=TIMESTAMP}
				,#{orderType,jdbcType=VARCHAR}
				,#{diningTime,jdbcType=TIMESTAMP}
				,#{note,jdbcType=VARCHAR}
									)
	</insert>
	
</mapper>
