<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dongnao.workbench.marketStudent.dao.MarketStudentMapper">
	<resultMap id="BaseResultMap" type="com.dongnao.workbench.marketStudent.model.MarketStudent">
		<id column="id" property="id" jdbcType="VARCHAR" />
		<result column="qq" property="qq" jdbcType="VARCHAR" />
		<result column="subject_id" property="subjectId" jdbcType="VARCHAR" />
		<result column="user_id" property="userId" jdbcType="VARCHAR" />
		<result column="time" property="time" jdbcType="TIMESTAMP" />
		<result column="notes" property="notes" jdbcType="VARCHAR" />
		<result column="subjectname" property="subjectname" jdbcType="VARCHAR" />
		<result column="coursename" property="coursename" jdbcType="VARCHAR" />
		<result column="file_url" property="fileUrl" jdbcType="BLOB" />
	</resultMap>
	
	<resultMap id="ProInfoResultMap" type="com.dongnao.workbench.marketStudent.model.Promotionalinfo">
		<id column="id" property="id" jdbcType="VARCHAR" />
		<result column="qq" property="qq" jdbcType="VARCHAR" />
		<result column="subjectid" property="subjectid" jdbcType="VARCHAR"/>
		<result column="course" property="course" jdbcType="VARCHAR" />
		<result column="level" property="level" jdbcType="VARCHAR" />
		<result column="entry_emp" property="entry_emp" jdbcType="VARCHAR" />
		<result column="entry_time" property="entry_time" jdbcType="TIMESTAMP" />
		<result column="is_buy" property="is_buy" jdbcType="VARCHAR" />
		<result column="auxiliary" property="auxiliary" jdbcType="VARCHAR" />
		<result column="notes" property="notes" jdbcType="VARCHAR" />
	</resultMap>						
									
	<sql id="Base_Column_List">
	 	m.id
		,m.qq
		,m.subject_id
		,m.user_id
		,m.time
		,m.notes
		,file_url
	</sql>
	
	<select id="getByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
		select s.name as subjectname,b.full_name as fullname, 
		m.id
		,m.qq
		,m.subject_id
		,m.user_id
		,m.time
		,m.notes
		,file_url
			from market_student as m 
			left join subject as s on m.subject_id=s.id 
			left join basic_user_info as b on m.user_id=b.id
		where m.id = #{id,jdbcType=VARCHAR}
	</select>
	
	<select id="getPIByPrimaryKey" resultMap="ProInfoResultMap" parameterType="java.lang.String">
		select id,qq,subjectid,course,level,entry_emp,DATE_FORMAT(entry_time,'%Y-%m-%d') as entry_time,is_buy,auxiliary,notes from promotional_info
		where id = #{id,jdbcType=VARCHAR}
	</select>
	
	<select id="getMarkStuCount" resultMap="BaseResultMap" parameterType="java.lang.String">
		select count(*) as markStuCount
		from market_student
		WHERE 1=1 
		<if test="_parameter!=null and _parameter!=''"> 
			AND DATE_FORMAT(time,'%Y%m') like CONCAT('%',#{month,jdbcType=VARCHAR},'%')
		</if>
	</select>
	
	<select id="listPromotionalInfo" resultMap="ProInfoResultMap" parameterType="com.dongnao.workbench.marketStudent.model.Promotionalinfo">
		select id,qq,course,level,entry_emp,entry_time,is_buy,auxiliary,notes from promotional_info 
		where 1=1
		<if test="id != null and '' != id">  
			and id = #{id,jdbcType=VARCHAR}
		</if>
		<if test="qq != null and '' != qq">  
			and qq = #{qq,jdbcType=VARCHAR}
		</if>
		<if test="subjectid != null and '' != subjectid">  
			and subjectid = #{subjectid,jdbcType=VARCHAR}
		</if>
		<if test="course != null and '' != course">  
			and course = #{course,jdbcType=VARCHAR}
		</if>
		<if test="level != null and '' != level">  
			and level = #{level,jdbcType=VARCHAR}
		</if>
		<if test="entry_emp != null and '' != entry_emp">  
			and entry_emp = #{entry_emp,jdbcType=VARCHAR}
		</if>
		<if test="entry_time != null and '' != entry_time">  
			and entry_time = #{entry_time,jdbcType=TIMESTAMP}
		</if>
		<if test="is_buy != null and '' != is_buy">  
			and is_buy = #{is_buy,jdbcType=VARCHAR}
		</if>
		<if test="auxiliary != null and '' != auxiliary">  
			and auxiliary = #{auxiliary,jdbcType=VARCHAR}
		</if>
		<if test="notes != null and '' != notes">  
			and notes = #{notes,jdbcType=VARCHAR}
		</if>
		<if test="null != propsMap.startDate and propsMap.startDate != ''">
			<![CDATA[
			and DATE_FORMAT(entry_time,'%Y-%m-%d') >= DATE_FORMAT(#{propsMap.startDate,jdbcType=TIMESTAMP},'%Y-%m-%d')
			]]>
		</if>
		<if test="null != propsMap.endDate and propsMap.endDate != ''">
			<![CDATA[
				and DATE_FORMAT(entry_time,'%Y-%m-%d') <= DATE_FORMAT(#{propsMap.endDate,jdbcType=TIMESTAMP},'%Y-%m-%d')
			]]>
		</if>
				<if test="orderFields != null and '' != orderFields">  
           	order by ${orderFields} ${order}
         	</if>
	</select>
	
	
	
	<select id="listByCondition" resultMap="BaseResultMap" parameterType="com.dongnao.workbench.marketStudent.model.MarketStudent">
		select 
			s.name as subjectname,
			b.full_name as fullname,
			m.id,
			m.qq,
			m.subject_id,
			m.user_id,
			m.time,
			m.notes
		from market_student as m 
		left join subject as s on m.subject_id=s.id 
		left join basic_user_info as b on m.user_id=b.id
		where 1=1
		<if test="id != null and '' != id">  
			and m.id = #{id,jdbcType=VARCHAR}
		</if>
		<if test="createdby != null and '' != createdby">
			and b.createdby = #{createdby,jdbcType=VARCHAR}
		</if>
		<if test="qq != null and '' != qq">  
			and m.qq = #{qq,jdbcType=VARCHAR}
		</if>
		<if test="subjectId != null and '' != subjectId">  
			and m.subject_id = #{subjectId,jdbcType=VARCHAR}
		</if>
		<if test="userId != null and '' != userId">  
			and m.user_id = #{userId,jdbcType=VARCHAR}
		</if>
		<if test="time != null and '' != time">  
			and m.time = #{time,jdbcType=TIMESTAMP}
		</if>
		<if test="notes != null and '' != notes">  
			and m.notes = #{notes,jdbcType=VARCHAR}
		</if>
		<if test="null != propsMap.startDate and propsMap.startDate != ''">
			<![CDATA[
			and DATE_FORMAT(m.time,'%Y-%m-%d') >= DATE_FORMAT(#{propsMap.startDate,jdbcType=TIMESTAMP},'%Y-%m-%d')
			]]>
		</if>
		<if test="null != propsMap.endDate and propsMap.endDate != ''">
			<![CDATA[
				and DATE_FORMAT(m.time,'%Y-%m-%d') <= DATE_FORMAT(#{propsMap.endDate,jdbcType=TIMESTAMP},'%Y-%m-%d')
			]]>
		</if>
				<if test="orderFields != null and '' != orderFields">  
           	order by ${orderFields} ${order}
         	</if>
	</select>
	
	<delete id="deleteByKey" parameterType="java.lang.String">
		delete from market_student where id = #{id,jdbcType=VARCHAR}
	</delete>
	
	<insert id="add" parameterType="com.dongnao.workbench.marketStudent.model.MarketStudent">
		insert into market_student(
			id
			,qq
			,subject_id
			,user_id
			,time
			,notes
			,file_url
		)values (
			#{id,jdbcType=VARCHAR}
			,#{qq,jdbcType=VARCHAR}
			,#{subjectId,jdbcType=VARCHAR}
			,#{userId,jdbcType=VARCHAR}
			,#{time,jdbcType=TIMESTAMP}
			,#{notes,jdbcType=VARCHAR}
			,#{fileUrl,jdbcType=BLOB}
		)
	</insert>
	
	<insert id="addPromotionalInfo" parameterType="com.dongnao.workbench.marketStudent.model.Promotionalinfo">
		insert into promotional_info(
			id
			,qq
			,subjectid
			,course
			,level
			,entry_emp
			,entry_time
			,is_buy
			,auxiliary
			,notes
		)values (
			#{id,jdbcType=VARCHAR}
			,#{qq,jdbcType=VARCHAR}
			,#{subjectid,jdbcType=VARCHAR}
			,#{course,jdbcType=VARCHAR}
			,#{level,jdbcType=VARCHAR}
			,#{entry_emp,jdbcType=TIMESTAMP}
			,#{entry_time,jdbcType=TIMESTAMP}
			,#{is_buy,jdbcType=BLOB}
			,#{auxiliary,jdbcType=BLOB}
			,#{notes,jdbcType=BLOB}
		)
	</insert>
	
	<update id="update" parameterType="com.dongnao.workbench.marketStudent.model.MarketStudent">
		update market_student  set
		ID= #{id,jdbcType=VARCHAR}
			,qq = #{qq,jdbcType=VARCHAR}
			,subject_id = #{subjectId,jdbcType=VARCHAR}
			<!-- ,user_id = #{userId,jdbcType=VARCHAR} -->
<!-- 											,time = #{time,jdbcType=TIMESTAMP} -->
				,notes = #{notes,jdbcType=VARCHAR}
				,file_url = #{fileUrl,jdbcType=BLOB}
		where id = #{id,jdbcType=VARCHAR}
	</update>
	
	<update id="updatePromotionalInfo" parameterType="com.dongnao.workbench.marketStudent.model.Promotionalinfo">
		update promotional_info  set
			subjectid = #{subjectid,jdbcType=VARCHAR}
			,course = #{course,jdbcType=VARCHAR}
			,level = #{level,jdbcType=VARCHAR}
			,is_buy = #{is_buy,jdbcType=VARCHAR}
			,auxiliary = #{auxiliary,jdbcType=VARCHAR}
			,notes = #{notes,jdbcType=VARCHAR}
			where id = #{id,jdbcType=VARCHAR}
	</update>
	
	
	<update id="updateProInfoIsBuy" parameterType="com.dongnao.workbench.marketStudent.model.Promotionalinfo">
		update promotional_info  set is_buy = #{is_buy,jdbcType=VARCHAR} where id = #{id,jdbcType=VARCHAR}
	</update>
</mapper>
