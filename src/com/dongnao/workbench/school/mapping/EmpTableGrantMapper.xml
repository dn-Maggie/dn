<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dongnao.workbench.school.dao.EmpTableGrantMapper">
	<resultMap id="BaseResultMap" type="com.dongnao.workbench.school.model.EmpTableGrant">
		<id column="id" property="id" jdbcType="VARCHAR" />
			<result column="emp_id" property="empId" jdbcType="VARCHAR" />
			<result column="reason" property="reason" jdbcType="VARCHAR" />
			<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
			<result column="grant_date_start" property="grantDateStart" jdbcType="TIMESTAMP" />
			<result column="grant_date_end" property="grantDateEnd" jdbcType="TIMESTAMP" />
			<result column="grant_time" property="grantTime" jdbcType="INTEGER" />
			<result column="table_money" property="tableMoney" jdbcType="DOUBLE" />
			<result column="check_id" property="checkId" jdbcType="VARCHAR" />
			<result column="check_date" property="checkDate" jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Base_Column_List">
	 	id
		,emp_id
		,reason
		,create_time
		,grant_date_start
		,grant_date_end
		,grant_time
		,table_money
		,check_id
		,check_date
	</sql>
	
	<select id="getByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
			etg.id
			,etg.emp_id
			,e1.nick_name AS empNickName
			,bo.org_name AS empDept
			,bo.corp_man AS deptLeader
			,etg.reason
			,etg.create_time
			,etg.grant_date_start
			,etg.grant_date_end
			,etg.grant_time
			,(etg.grant_time*10) as table_money
			,etg.check_id
			,e2.nick_name AS checkName
			,etg.check_date
		from emp_table_grant etg
		LEFT JOIN employee e1 ON e1.id = etg.emp_id
		LEFT JOIN basic_org bo on e1.dept_no = bo.org_no
		LEFT JOIN employee e2 ON e2.id = etg.check_id
		where etg.id = #{id,jdbcType=VARCHAR}
	</select>
	
	<select id="listByCondition" resultMap="BaseResultMap" parameterType="com.dongnao.workbench.school.model.EmpTableGrant">
		select
			etg.id
			,etg.emp_id
			,e1.nick_name AS empNickName
			,bo.org_name AS empDept
			,bo.corp_man AS deptLeader
			,etg.reason
			,etg.create_time
			,etg.grant_date_start
			,etg.grant_date_end
			,etg.grant_time
			,(etg.grant_time*10) as table_money
			,etg.check_id
			,e2.nick_name AS checkName
			,etg.check_date
		from emp_table_grant etg
		LEFT JOIN employee e1 ON e1.id = etg.emp_id
		LEFT JOIN basic_org bo on e1.dept_no = bo.org_no
		LEFT JOIN employee e2 ON e2.id = etg.check_id
		where 1=1
		<if test="id != null and '' != id">  
			and etg.id = #{id,jdbcType=VARCHAR}
		</if>
		<if test="empId != null and '' != empId">  
			and etg.emp_id = #{empId,jdbcType=VARCHAR}
		</if>
		<if test="empNickName != null and '' != empNickName">  
			and e1.nick_name = #{empNickName,jdbcType=VARCHAR}
		</if>
		<if test="empDept != null and '' != empDept">  
			and bo.org_name = #{empDept,jdbcType=VARCHAR}
		</if>
		<if test="reason != null and '' != reason">  
			and etg.reason = #{reason,jdbcType=VARCHAR}
		</if>
		<if test="null != propsMap.startDate and propsMap.startDate != ''">
			<![CDATA[
			and DATE_FORMAT(etg.create_time,'%Y-%m-%d') >= DATE_FORMAT(#{propsMap.startDate,jdbcType=TIMESTAMP},'%Y-%m-%d')
			]]>
		</if>
		<if test="null != propsMap.endDate and propsMap.endDate != ''">
			<![CDATA[
				and DATE_FORMAT(etg.create_time,'%Y-%m-%d') <= DATE_FORMAT(#{propsMap.endDate,jdbcType=TIMESTAMP},'%Y-%m-%d')
			]]>
		</if>
		<if test="startDate != null and '' != startDate">  
			and DATE_FORMAT(etg.grant_date_start,'%Y-%m-%d') >= DATE_FORMAT(#{startDate,jdbcType=TIMESTAMP},'%Y-%m-%d')
		</if>
		<if test="endDate != null and '' != endDate">  
			and DATE_FORMAT(etg.grant_date_end,'%Y-%m-%d') >= DATE_FORMAT(#{endDate,jdbcType=TIMESTAMP},'%Y-%m-%d')
		</if>
		<if test="grantTime != null and '' != grantTime">  
			and etg.grant_time = #{grantTime,jdbcType=INTEGER}
		</if>
		<if test="tableMoney != null and '' != tableMoney">  
			and table_money = #{tableMoney,jdbcType=DOUBLE}
		</if>
		<if test="checkId != null and '' != checkId">  
			and etg.check_id = #{checkId,jdbcType=VARCHAR}
		</if>
		<if test="checkDate != null and '' != checkDate">  
			and etg.check_date = #{checkDate,jdbcType=TIMESTAMP}
		</if>
		<if test="orderFields != null and '' != orderFields">  
          	order by ${orderFields} ${order}
       	</if>
	</select>
	
	<delete id="deleteByKey" parameterType="java.lang.String">
		delete from emp_table_grant
		where id = #{id,jdbcType=VARCHAR}
	</delete>
	
	<insert id="add" parameterType="com.dongnao.workbench.school.model.EmpTableGrant">
		insert into emp_table_grant (
		<include refid="Base_Column_List" />
		)values (
						#{id,jdbcType=VARCHAR}
						,#{empId,jdbcType=VARCHAR}
						,#{reason,jdbcType=VARCHAR}
						,#{createTime,jdbcType=TIMESTAMP}
						,#{grantDateStart,jdbcType=TIMESTAMP}
						,#{grantDateEnd,jdbcType=TIMESTAMP}
						,#{grantTime,jdbcType=INTEGER}
						,#{tableMoney,jdbcType=DOUBLE}
						,#{checkId,jdbcType=VARCHAR}
						,#{checkDate,jdbcType=TIMESTAMP}
					)
	</insert>
	
	<update id="update" parameterType="com.dongnao.workbench.school.model.EmpTableGrant">
		update emp_table_grant  set
		ID= #{id,jdbcType=VARCHAR}
											,emp_id = #{empId,jdbcType=VARCHAR}
											,reason = #{reason,jdbcType=VARCHAR}
											,create_time = #{createTime,jdbcType=TIMESTAMP}
											,grant_date_start = #{grantDateStart,jdbcType=TIMESTAMP}
											,grant_date_end = #{grantDateEnd,jdbcType=TIMESTAMP}
											,grant_time = #{grantTime,jdbcType=INTEGER}
											,table_money = #{tableMoney,jdbcType=DOUBLE}
											,check_id = #{checkId,jdbcType=VARCHAR}
											,check_date = #{checkDate,jdbcType=TIMESTAMP}
							where id = #{id,jdbcType=VARCHAR}
	</update>
</mapper>
