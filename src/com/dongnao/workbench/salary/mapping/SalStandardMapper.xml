<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dongnao.workbench.salary.dao.SalStandardMapper">
	<resultMap id="BaseResultMap" type="com.dongnao.workbench.salary.model.SalStandard">
		<id column="id" property="id" jdbcType="VARCHAR" />
															<result column="duty_id" property="dutyId" jdbcType="VARCHAR" />
													<result column="leve_name" property="leveName" jdbcType="VARCHAR" />
													<result column="standard_name" property="standardName" jdbcType="VARCHAR" />
													<result column="total_value" property="totalValue" jdbcType="VARCHAR" />
													<result column="salary_typeName" property="salaryTypename" jdbcType="VARCHAR" />
													<result column="stock_num" property="stockNum" jdbcType="INTEGER" />
													<result column="basic_salary" property="basicSalary" jdbcType="DECIMAL" />
													<result column="duty_salary" property="dutySalary" jdbcType="DECIMAL" />
													<result column="social_securitySalary" property="socialSecuritysalary" jdbcType="DECIMAL" />
													<result column="performance_salary" property="performanceSalary" jdbcType="DECIMAL" />
													<result column="createdbyname" property="createdbyname" jdbcType="VARCHAR" />
													<result column="created" property="created" jdbcType="VARCHAR" />
													<result column="remark" property="remark" jdbcType="VARCHAR" />
									</resultMap>
	<sql id="Base_Column_List">
						 	id
										,duty_id
										,leve_name
										,standard_name
										,total_value
										,salary_typeName
										,stock_num
										,basic_salary
										,duty_salary
										,social_securitySalary
										,performance_salary
										,createdbyname
										,created
										,remark
						</sql>
	
	<select id="getByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from sal_standard
		where id = #{id,jdbcType=VARCHAR}
	</select>
	
	<select id="listByCondition" resultMap="BaseResultMap" parameterType="com.dongnao.workbench.salary.model.SalStandard">
		select
			ss.id
			,ss.duty_id
			,ss.leve_name
			,ss.standard_name
			,ss.total_value
			,ss.salary_typeName
			,ss.stock_num
			,ss.basic_salary
			,ss.duty_salary
			,ss.social_securitySalary
			,ss.performance_salary
			,ss.createdbyname
			,ss.created
			,ss.remark
			,bd.duty_name as dutyName
		from sal_standard ss
		LEFT JOIN (SELECT id, duty_name FROM basic_duty) bd ON bd.id = ss.duty_id
		where 1=1
		<if test="id != null and '' != id">  
			and id = #{id,jdbcType=VARCHAR}
		</if>
		<if test="dutyId != null and '' != dutyId">  
			and duty_id = #{dutyId,jdbcType=VARCHAR}
		</if>
		<if test="leveName != null and '' != leveName">  
			and leve_name = #{leveName,jdbcType=VARCHAR}
		</if>
		<if test="standardName != null and '' != standardName">  
			and standard_name = #{standardName,jdbcType=VARCHAR}
		</if>
		<if test="totalValue != null and '' != totalValue">  
			and total_value = #{totalValue,jdbcType=VARCHAR}
		</if>
		<if test="salaryTypename != null and '' != salaryTypename">  
			and salary_typeName = #{salaryTypename,jdbcType=VARCHAR}
		</if>
		<if test="stockNum != null and '' != stockNum">  
			and stock_num = #{stockNum,jdbcType=INTEGER}
		</if>
		<if test="basicSalary != null and '' != basicSalary">  
			and basic_salary = #{basicSalary,jdbcType=DECIMAL}
		</if>
		<if test="dutySalary != null and '' != dutySalary">  
			and duty_salary = #{dutySalary,jdbcType=DECIMAL}
		</if>
		<if test="socialSecuritysalary != null and '' != socialSecuritysalary">  
			and social_securitySalary = #{socialSecuritysalary,jdbcType=DECIMAL}
		</if>
		<if test="performanceSalary != null and '' != performanceSalary">  
			and performance_salary = #{performanceSalary,jdbcType=DECIMAL}
		</if>
		<if test="createdbyname != null and '' != createdbyname">  
			and createdbyname = #{createdbyname,jdbcType=VARCHAR}
		</if>
		<if test="created != null and '' != created">  
			and created = #{created,jdbcType=VARCHAR}
		</if>
		<if test="remark != null and '' != remark">  
			and remark = #{remark,jdbcType=VARCHAR}
		</if>
				<if test="orderFields != null and '' != orderFields">  
           	order by ${orderFields} ${order}
         	</if>
	</select>
	
	<delete id="deleteByKey" parameterType="java.lang.String">
		delete from sal_standard
		where id = #{id,jdbcType=VARCHAR}
	</delete>
	
	<insert id="add" parameterType="com.dongnao.workbench.salary.model.SalStandard">
		insert into sal_standard (
		<include refid="Base_Column_List" />
		)values (
										#{id,jdbcType=VARCHAR}
														,#{dutyId,jdbcType=VARCHAR}
														,#{leveName,jdbcType=VARCHAR}
														,#{standardName,jdbcType=VARCHAR}
														,#{totalValue,jdbcType=VARCHAR}
														,#{salaryTypename,jdbcType=VARCHAR}
														,#{stockNum,jdbcType=INTEGER}
														,#{basicSalary,jdbcType=DECIMAL}
														,#{dutySalary,jdbcType=DECIMAL}
														,#{socialSecuritysalary,jdbcType=DECIMAL}
														,#{performanceSalary,jdbcType=DECIMAL}
														,#{createdbyname,jdbcType=VARCHAR}
														,#{created,jdbcType=VARCHAR}
														,#{remark,jdbcType=VARCHAR}
									)
	</insert>
	
	<update id="update" parameterType="com.dongnao.workbench.salary.model.SalStandard">
		update sal_standard  set
		ID= #{id,jdbcType=VARCHAR}
													,duty_id = #{dutyId,jdbcType=VARCHAR}
											,leve_name = #{leveName,jdbcType=VARCHAR}
											,standard_name = #{standardName,jdbcType=VARCHAR}
											,total_value = #{totalValue,jdbcType=VARCHAR}
											,salary_typeName = #{salaryTypename,jdbcType=VARCHAR}
											,stock_num = #{stockNum,jdbcType=INTEGER}
											,basic_salary = #{basicSalary,jdbcType=DECIMAL}
											,duty_salary = #{dutySalary,jdbcType=DECIMAL}
											,social_securitySalary = #{socialSecuritysalary,jdbcType=DECIMAL}
											,performance_salary = #{performanceSalary,jdbcType=DECIMAL}
											,createdbyname = #{createdbyname,jdbcType=VARCHAR}
											,created = #{created,jdbcType=VARCHAR}
											,remark = #{remark,jdbcType=VARCHAR}
							where id = #{id,jdbcType=VARCHAR}
	</update>
</mapper>
